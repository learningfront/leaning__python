# Эти задачи необходимо решить используя регулярные выражения!
import re
# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры,
# точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.

# pattern_for_name_or_sername = '^[A-Z]+[a-z]+$'
# pattern_for_email = '^[a-z0-9_]+@[a-z0-9]+\.(ru|org|com)$'
# name, sername, email = (input('Введите Имя, Фамилию, Почту: ')).split()
#
# print(name, sername, email)
#
# print(re.search(pattern_for_name_or_sername, name))
# print(re.findall(pattern_for_name_or_sername, name))
# print(re.match(pattern_for_name_or_sername, name))
#
#
# if re.match(pattern_for_name_or_sername, name) is None:
#     print('Вы ввели не корректное имя, попробуйте ещё')
# else:
#     print('Имя добавлено успешно')
#
# print('Вы ввели не корректное имя, попробуйте ещё' if re.match(pattern_for_name_or_sername, name) is None else 'Имя добавлено успешно')
#
# if re.match(pattern_for_name_or_sername, sername) is None:
#     print('Вы ввели не корректную фамилию, попробуйте ещё')
# else:
#     print('Фамилия добавлено успешно')
#
# if re.match(pattern_for_email, email) is None:
#     print('Вы ввели не корректную почту, попробуйте ещё')
# else:
#     print('Почта добавлена успешно')

# Задача - 2:
# Вам дан текст:

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!


patern_for_string = '^.*\.{2,}.*$'

iter_dot = 0
for line in some_str.split('\n'):
    if not (re.match(patern_for_string, line) is None):
        iter_dot +=1
        print(line)

print(f' Найдено {iter_dot} строк(и) с 2 и более точек')
